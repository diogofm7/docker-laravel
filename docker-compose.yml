version: '3.5'

networks:
  traefik_network:
    external:
      name: ${TRAEFIK_NETWORK}
  project_network:
    name: ${PROJECT_NAME}_network
    driver: bridge

services:

  #  The Application
  app:
    container_name: ${PROJECT_NAME}_app
    image: ${PROJECT_NAME}_app
    restart: always
    build:
      context: DOCKERFILES/PHP
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    user: "${UID}:${GID}"
    volumes:
      - ${PATH_PROJECT}:/var/www
      - ./ssh:/home/www-data/.ssh
    networks:
      - project_network

  # The Web Server
  web:
    container_name: ${PROJECT_NAME}_web
    image: ${PROJECT_NAME}_web
    restart: always
    build:
      context: DOCKERFILES/NGINX
      dockerfile: Dockerfile
    volumes:
      - ./nginx/logs/:/var/log/nginx
      - ${PATH_PROJECT}:/var/www
    #ports:
    #  - 80:80
    networks:
      - traefik_network
      - project_network
    depends_on:
      - app
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.${PROJECT_NAME}-web.rule=Host(${PROJECT_DOMAIN})" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.${PROJECT_NAME}-web.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.${PROJECT_NAME}-web.middlewares=https-redirect" # <== This is a middleware to redirect to https
      - "traefik.http.routers.${PROJECT_NAME}-secured.rule=Host(${PROJECT_DOMAIN})" # <== Your Domain Name for the https rule
      - "traefik.http.routers.${PROJECT_NAME}-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.${PROJECT_NAME}-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https
      - "traefik.docker.network=${TRAEFIK_NETWORK}"

  #The Worker
  worker:
    container_name: ${PROJECT_NAME}_worker
    image: ${PROJECT_NAME}_worker
    restart: always
    build:
      context: DOCKERFILES/PHP-WORKER
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PROJECT_NAME: ${PROJECT_NAME}
    environment:
      - NUM_PROCS=${NUM_PROCS}
    volumes:
      - ${PATH_PROJECT}:/var/www
      #- ./supervisord.d:/etc/supervisord.d
    networks:
      - project_network

  # The Redis - Queue, Session, Cache
  redis:
    container_name: ${PROJECT_NAME}_redis
    restart: always
    image: redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis:/data
    networks:
      - project_network

  # The Database
  db:
    container_name: ${PROJECT_NAME}_db
    restart: always
    image: mariadb:latest
    volumes:
      - ./db:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    environment:
      - TZ=America/Sao_Paulo
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_USER_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - project_network